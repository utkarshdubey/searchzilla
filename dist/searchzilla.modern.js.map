{"version":3,"file":"searchzilla.modern.js","sources":["../src/search.ts"],"sourcesContent":["interface SearchOptions {\r\n    params: {\r\n        data: any,\r\n        exclude ? : any\r\n    }\r\n}\r\n\r\nexport class Search implements SearchOptions {\r\n    constructor(params: any) {\r\n        this.params = params;\r\n        this.keys = [];\r\n        this.filteredData = [];\r\n        this.stopwords;\r\n\r\n        // Set the dictionary\r\n        if (this.params.exclude) {\r\n            this.stopwords = new Set(this.params.exclude);\r\n        }\r\n    }\r\n    data: any;\r\n    keys: Array<string> ;\r\n    filteredData: Array<object> ;\r\n    params: any;\r\n    stopwords: any;\r\n\r\n    add(...addKey: any) {\r\n        // Conditions for empty/null input\r\n        if (!addKey) throw \"Key not provided\";\r\n\r\n        // Adding keys\r\n        addKey.forEach(key => {\r\n            this.keys.push(key);\r\n        })\r\n\r\n    }\r\n\r\n    search(searchKey: string) {\r\n        // Conditions for empty/null\r\n        if (!searchKey) throw \"Key not provided\";\r\n\r\n        // console.log(this.data, this.keys);\r\n\r\n        // Stopwords filtering function\r\n        const filterStopwords = (word: string) => {\r\n            if (this.stopwords.has(word)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n          // Actual Search logic\r\n          this.params.data.filter(item => {\r\n            this.keys.some(key => {\r\n                const filteredItem = item[key].toLowerCase();\r\n                const filteredSearchKey = searchKey.toLowerCase();\r\n                // Stopwords filtering\r\n\r\n                if(filteredItem.includes(filteredSearchKey)){\r\n                    if(!this.stopwords || filterStopwords(filteredSearchKey)){\r\n                        this.filteredData.push(item);\r\n                        return true;\r\n                    }                    \r\n                }\r\n            })\r\n        })\r\n\r\n        return this.filteredData;\r\n\r\n    }\r\n}"],"names":["Search","constructor","params","this","keys","filteredData","exclude","stopwords","Set","add","addKey","forEach","key","push","search","searchKey","filterStopwords","word","has","data","filter","item","some","filteredItem","toLowerCase","filteredSearchKey","includes"],"mappings":"MAOaA,EACTC,YAAYC,GACRC,KAAKD,OAASA,EACdC,KAAKC,KAAO,GACZD,KAAKE,aAAe,GAIhBF,KAAKD,OAAOI,UACZH,KAAKI,UAAY,IAAIC,IAAIL,KAAKD,OAAOI,UAS7CG,OAAOC,GAEH,IAAKA,EAAQ,KAAM,mBAGnBA,EAAOC,QAAQC,IACXT,KAAKC,KAAKS,KAAKD,KAKvBE,OAAOC,GAEH,IAAKA,EAAW,KAAM,mBAKtB,MAAMC,EAAmBC,KACjBd,KAAKI,UAAUW,IAAID,GAsB3B,OAfEd,KAAKD,OAAOiB,KAAKC,OAAOC,IACtBlB,KAAKC,KAAKkB,KAAKV,IACX,MAAMW,EAAeF,EAAKT,GAAKY,cACzBC,EAAoBV,EAAUS,cAGpC,GAAGD,EAAaG,SAASD,MACjBtB,KAAKI,WAAaS,EAAgBS,IAElC,OADAtB,KAAKE,aAAaQ,KAAKQ,eAO3BhB"}
class t{constructor(t){this.params=t,this.keys=[],this.filteredData=[],this.params.exclude&&(this.stopwords=new Set(this.params.exclude))}add(...t){if(!t)throw"Key not provided";t.forEach(t=>{this.keys.push(t)})}search(t){if(!t)throw"Key not provided";const s=t=>!!this.stopwords.has(t);return this.params.data.forEach(e=>{this.keys.some(o=>{Object.entries(e).forEach(t=>console.log(typeof t)),Object.entries(e).forEach(r=>{if("object"==typeof r)r.forEach(a=>{if(a==o){const a=r[o].toLowerCase(),i=t.toLowerCase();if(a.includes(i)&&(!this.stopwords||s(a)))return this.filteredData.push(e),!0}});else{const r=e[o].toLowerCase(),a=t.toLowerCase();if(r.includes(a)&&(!this.stopwords||s(r)))return this.filteredData.push(e),!0}})})}),this.filteredData}}export{t as Search};
//# sourceMappingURL=searchzilla.modern.js.map

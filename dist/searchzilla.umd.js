!function(i,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((i=i||self).searchzilla={})}(this,function(i){i.Search=function(){function i(i){this.params=i,this.keys=[],this.filteredData=[],this.initialized=!1}var t=i.prototype;return t.init=function(){if(!this.params.data)throw"Undefined or null data provided.";if(!Object.keys(this.params.data).length)throw"Can't search inside an empty variable";this.initialized=!0,this.params.exclude&&(this.stopwords=new Set(this.params.exclude))},t.add=function(){var i=this,t=[].slice.call(arguments);if(!t)throw"Key not provided";if(!this.initialized)throw"Class not initialized.";t.forEach(function(t){i.keys.push(t)})},t.search=function(i){var t=this;if(!i)throw"Key not provided";if(!this.initialized)throw"Class not initialized.";return this.params.data.filter(function(e){t.keys.some(function(a){var s=e[a].toLowerCase(),n=i.toLowerCase();if(s.includes(n)&&(!t.stopwords||t.stopwords.has(s)))return t.filteredData.push(e),!0})}),this.filteredData},i}()});
//# sourceMappingURL=searchzilla.umd.js.map
